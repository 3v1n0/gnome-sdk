From 66ba72b22864f38c36c542bfdfaf0ae469fc5ae7 Mon Sep 17 00:00:00 2001
From: Alice Mikhaylenko <alicem@gnome.org>
Date: Thu, 19 Sep 2024 19:55:34 +0400
Subject: [PATCH] tab-box/grid: Skip middle clicks if hovering different tab
 between press/release

Fixes https://gitlab.gnome.org/GNOME/libadwaita/-/issues/915


(cherry picked from commit 9079584dd997200a60f046b26949fc761748ce13)

(cherry picked from commit 21739d348029b53227dd47c82944ce9e3dd7e771)

diff --git a/src/adw-tab-box.c b/src/adw-tab-box.c
index 0bb6bb2b..8fb570d8 100644
--- a/src/adw-tab-box.c
+++ b/src/adw-tab-box.c
@@ -163,6 +163,8 @@ struct _AdwTabBox
 
   GtkWidget *needs_attention_left;
   GtkWidget *needs_attention_right;
+
+  TabInfo *middle_clicked_tab;
 };
 
 G_DEFINE_FINAL_TYPE_WITH_CODE (AdwTabBox, adw_tab_box, GTK_TYPE_WIDGET,
@@ -1933,6 +1935,9 @@ close_animation_done_cb (TabInfo *info)
   if (self->reordered_tab == info)
     self->reordered_tab = NULL;
 
+  if (self->middle_clicked_tab == info)
+    self->pressed_tab = NULL;
+
   remove_and_free_tab_info (info);
 
   self->n_tabs--;
@@ -2974,6 +2979,7 @@ pressed_cb (AdwTabBox  *self,
   button = gtk_gesture_single_get_current_button (GTK_GESTURE_SINGLE (gesture));
 
   if (button == GDK_BUTTON_MIDDLE) {
+    self->middle_clicked_tab = info;
     gtk_gesture_set_state (gesture, GTK_EVENT_SEQUENCE_CLAIMED);
 
     return;
@@ -3017,7 +3023,14 @@ released_cb (AdwTabBox  *self,
   button = gtk_gesture_single_get_current_button (GTK_GESTURE_SINGLE (gesture));
 
   if (button == GDK_BUTTON_MIDDLE) {
+    if (info != self->middle_clicked_tab) {
+      self->middle_clicked_tab = NULL;
+      gtk_gesture_set_state (gesture, GTK_EVENT_SEQUENCE_DENIED);
+      return;
+    }
+
     adw_tab_view_close_page (self->view, info->page);
+    self->middle_clicked_tab = NULL;
 
     return;
   }
diff --git a/src/adw-tab-grid.c b/src/adw-tab-grid.c
index 93c72324..1cc88e37 100644
--- a/src/adw-tab-grid.c
+++ b/src/adw-tab-grid.c
@@ -199,6 +199,8 @@ struct _AdwTabGrid
   gboolean searching;
 
   gboolean empty;
+
+  TabInfo *middle_clicked_tab;
 };
 
 G_DEFINE_FINAL_TYPE (AdwTabGrid, adw_tab_grid, GTK_TYPE_WIDGET)
@@ -1945,6 +1947,9 @@ close_animation_done_cb (TabInfo *info)
   if (self->reordered_tab == info)
     self->reordered_tab = NULL;
 
+  if (self->middle_clicked_tab == info)
+    self->pressed_tab = NULL;
+
   remove_and_free_tab_info (info);
 
   self->n_tabs--;
@@ -2925,6 +2930,7 @@ pressed_cb (AdwTabGrid *self,
   button = gtk_gesture_single_get_current_button (GTK_GESTURE_SINGLE (gesture));
 
   if (button == GDK_BUTTON_MIDDLE) {
+    self->middle_clicked_tab = info;
     gtk_gesture_set_state (gesture, GTK_EVENT_SEQUENCE_CLAIMED);
 
     return;
@@ -2964,7 +2970,14 @@ released_cb (AdwTabGrid *self,
   button = gtk_gesture_single_get_current_button (GTK_GESTURE_SINGLE (gesture));
 
   if (button == GDK_BUTTON_MIDDLE) {
+    if (info != self->middle_clicked_tab) {
+      self->middle_clicked_tab = NULL;
+      gtk_gesture_set_state (gesture, GTK_EVENT_SEQUENCE_DENIED);
+      return;
+    }
+
     adw_tab_view_close_page (self->view, info->page);
+    self->middle_clicked_tab = NULL;
 
     return;
   }
