name: gnome-3-32-1804-sdk
version: git
version-script: |
  echo $(git describe --tags).$(git describe --always)
summary: Shared GNOME 3.32 Ubuntu stack
description: |
 This snap contains only the necessary libraries required by
 GNOME applications.

confinement: strict
grade: stable
base: core18

# the recommended mountpoint for that content is /gnome-platform
slots:
    gnome-3-32-1804-sdk:
      interface: content
      read:
        - /

parts:
  buildenv:
    plugin: nil
    build-environment: &buildenv
      - ACLOCAL_PATH: $SNAPCRAFT_STAGE/usr/share/aclocal
      - XDG_DATA_DIRS: $XDG_DATA_DIRS:$SNAPCRAFT_STAGE/usr/share:/usr/share
      - LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAPCRAFT_STAGE/usr/lib/vala-0.46
      - GDK_PIXBUF_MODULE_FILE: $SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders.cache

  libtool:
    source: https://git.savannah.gnu.org/git/libtool.git
    plugin: autotools
    configflags: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - help2man
      - texinfo
    override-stage: |
      set -eux
      snapcraftctl stage
      LIBTOOLIZE=usr/bin/libtoolize
      sed -i 's#pkgauxdir="#pkgauxdir="$SNAPCRAFT_STAGE#' $LIBTOOLIZE
      sed -i 's#pkgltdldir="#pkgltdldir="$SNAPCRAFT_STAGE#' $LIBTOOLIZE
      sed -i 's#aclocaldir="#aclocaldir="$SNAPCRAFT_STAGE#' $LIBTOOLIZE

  libffi:
    after: [ libtool ]
    source: https://github.com/centricular/libffi.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv

  glib:
    after: [ libffi ]
    source: https://gitlab.gnome.org/GNOME/glib.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/glib-2.0/
      cp $SNAPCRAFT_PART_INSTALL/usr/bin/glib-compile-schemas $SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/glib-2.0/
    build-packages:
      - pkg-config
      - libmount-dev

  pixman:
    after: [ glib ]
    source: https://gitlab.freedesktop.org/pixman/pixman.git
    source-depth: 1
    plugin: autotools
    configflags: 
      - --prefix=/usr
      - --disable-gtk
    build-environment: *buildenv

  cairo:
    after: [ pixman ]
    source: git://anongit.freedesktop.org/git/cairo
    source-depth: 1
    plugin: autotools
    configflags:
      - --prefix=/usr
      - --enable-pdf
      - --enable-ps
      - --enable-xlib
      - --enable-png
      - --enable-tee
      - --enable-svg
      - --enable-xcb
      - --enable-perf-utils
      - --disable-silent-rules
      - --disable-maintainer-mode
      - --disable-gl
    build-environment: *buildenv
    build-packages:
      - libfontconfig1-dev
      - libfreetype6-dev
      - libx11-dev
      - libxext-dev
      - libxcb1-dev
      - libxcb-render0-dev
      - libxcb-shm0-dev
      - libsm-dev
      - zlib1g-dev
      - liblzo2-dev

  gobject-introspection:
    after: [ cairo ]
    source: https://gitlab.gnome.org/GNOME/gobject-introspection.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      SCANNER=$SNAPCRAFT_PART_INSTALL/usr/bin/g-ir-scanner
      mkdir -p $SNAPCRAFT_STAGE/usr/bin
      cp $SCANNER $SNAPCRAFT_STAGE/usr/bin/g-ir-scanner.orig
      sed -i 's#/usr/lib#$SNAPCRAFT_STAGE/usr/lib#' $SCANNER
      sed -i 's#/usr/share#$SNAPCRAFT_STAGE/usr/share#' $SCANNER
    build-packages:
      - python3-dev
      - bison
      - flex

  vala:
    after: [ gobject-introspection ]
    source: https://gitlab.gnome.org/GNOME/vala.git
    plugin: autotools
    configflags: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - autoconf-archive
      - valac
      - libgraphviz-dev

  gee: 
    after: [ vala ]
    source: https://gitlab.gnome.org/GNOME/libgee.git
    source-depth: 1
    plugin: autotools
    configflags: [ --prefix=/usr ]
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      GIREPOSITORY_PATH=$SNAPCRAFT_PART_INSTALL/usr/lib/girepository-1.0
      mkdir -p $GIREPOSITORY_PATH
      cp gee/Gee-0.8.typelib $GIREPOSITORY_PATH/
      GIR_PATH=$SNAPCRAFT_PART_INSTALL/usr/share/gir-1.0
      mkdir -p $GIR_PATH
      cp gee/Gee-0.8.gir $GIR_PATH/
      rm -r $SNAPCRAFT_PART_INSTALL/$(echo $SNAPCRAFT_STAGE | cut -d/ -f2)

  atk:
    after: [ gee ]
    source: https://gitlab.gnome.org/GNOME/atk.git
    source-depth: 1
    plugin: meson
    meson-parameters: 
      - --prefix=/usr
      - -Dintrospection=true
      - -Ddocs=false
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      PC=$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pkgconfig/atk.pc
      sed -i 's#exec_prefix=/usr#exec_prefix=${prefix}#' $PC
      sed -i 's#libdir=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET#libdir=${prefix}/lib/$SNAPCRAFT_ARCH_TRIPLET#' $PC
      sed -i 's#includedir=/usr/include#includedir=${prefix}/include#' $PC

  at-spi2-core:
    after: [ atk ]
    source: https://gitlab.gnome.org/GNOME/at-spi2-core.git
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dintrospection=yes
      - -Ddocs=false
    build-environment: *buildenv
    build-packages:
      - libdbus-1-dev
      - libxtst-dev

  at-spi2-atk:
    after: [ at-spi2-core ]
    source: https://gitlab.gnome.org/GNOME/at-spi2-atk.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv

  fribidi:
    after: [ at-spi2-atk ]
    source: https://github.com/fribidi/fribidi.git
    source-depth: 1
    plugin: meson
    meson-parameters: 
     - --prefix=/usr
     - -Ddocs=false
    build-environment: *buildenv

  harfbuzz:
    after: [ fribidi ]
    source: git://anongit.freedesktop.org/git/harfbuzz
    source-depth: 1
    plugin: autotools
    configflags:
      - --prefix=/usr
      - --with-graphite2=yes
      - --enable-introspection
      - --with-gobject
      - --enable-static
    build-environment: *buildenv
    build-packages:
      - ragel

  pango:
    after: [ harfbuzz ]
    source: https://gitlab.gnome.org/GNOME/pango.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - libthai-dev
      - libxft-dev
      - libxrender-dev
      - libxt-dev

  gdk-pixbuf:
    after: [ pango ]
    source: https://gitlab.gnome.org/GNOME/gdk-pixbuf.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    override-build: |
      set -eux
      snapcraftctl build
      LOADERS_PATH=$SNAPCRAFT_PART_INSTALL/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders
      cp /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/2.10.0/loaders/libpixbufloader-svg.so $LOADERS_PATH
      $SNAPCRAFT_PART_INSTALL/usr/bin/gdk-pixbuf-query-loaders $LOADERS_PATH/*.so > $LOADERS_PATH.cache
    organize:
      usr/bin/gdk-pixbuf-query-loaders: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gdk-pixbuf-2.0/gdk-pixbuf-query-loaders
    build-packages:
      - libpng-dev
      - libjpeg-dev
      - libtiff-dev
      - librsvg2-common

  epoxy:
    after: [ gdk-pixbuf ]
    source: https://github.com/anholt/libepoxy.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - libgl1-mesa-dev
      - libegl1-mesa-dev
      - xutils-dev

  json-glib: 
    after: [ epoxy ]
    source: https://gitlab.gnome.org/GNOME/json-glib.git
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dgtk_doc=disabled
    build-environment: *buildenv

  libpsl:
    after: [ json-glib ]
    source: https://github.com/rockdaboot/libpsl.git
    source-depth: 1
    plugin: autotools
    configflags:
      - --prefix=/usr
      - --enable-runtime=libidn2
    build-environment: *buildenv
    build-packages:
      - libidn2-0-dev
      - libunistring-dev

  libsoup:
    after: [ libpsl ]
    source: https://gitlab.gnome.org/GNOME/libsoup.git
    source-depth: 1
    plugin: meson
    meson-parameters: 
      - --prefix=/usr
      - -Dvapi=true
    build-environment: *buildenv
    build-packages:
      - libsqlite3-dev
      - libkrb5-dev
      - libbrotli-dev

  librest:
    after: [ libsoup ]
    source: https://gitlab.gnome.org/GNOME/librest.git
    source-depth: 1
    plugin: autotools
    configflags: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - gtk-doc-tools

  gtk:
    after: [ librest ]
    source: https://gitlab.gnome.org/GNOME/gtk.git
    source-branch: gtk-3-24
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - -Dbroadway_backend=true
      - -Dx11_backend=true
      - -Dwayland_backend=true
      - -Dwin32_backend=false
      - -Dquartz_backend=false
      - -Dxinerama=yes
      - -Dintrospection=true
      - -Dbuiltin_immodules=yes
      - -Ddemos=false
      - -Dexamples=false
    build-environment: *buildenv
    organize:
      usr/lib/gtk-3.0: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gtk-3.0
      usr/bin/gtk-query-immodules-3.0: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libgtk-3-0/gtk-query-immodules-3.0
    build-packages:
      - libwayland-dev
      - wayland-protocols
      - libxkbcommon-dev
      - libxinerama-dev
      - libcups2-dev
      - libcolord-dev
      - libxrandr-dev
      - libxcursor-dev
      - libisocodes-dev
      - libxcomposite-dev
      - libxdamage-dev
      - libxfixes-dev
      - libxi-dev
      - libxkbfile-dev
      - libxml2-utils

  gtk-locales:
    after: [ gtk ]
    plugin: nil
    override-pull: |
      set -eux
      apt download "language-pack-gnome-*-base"
    override-build: |
      set -eux
      for deb in *.deb; do dpkg-deb -x $deb .; done
      find usr/share/locale-langpack -type f -not -name "gtk30*.mo" -exec rm '{}' \;
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/share
      cp -r usr/share/locale-langpack $SNAPCRAFT_PART_INSTALL/usr/share/

  gtksourceview:
    after: [ gtk-locales ]
    source: https://gitlab.gnome.org/GNOME/gtksourceview.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv
    build-packages:
      - gettext
      - libxml2-dev

  libdazzle:
    after: [ gtksourceview ]
    source: https://gitlab.gnome.org/GNOME/libdazzle.git
    source-depth: 1
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv

  # meson:
  #   plugin: python
  #   source: https://github.com/mesonbuild/meson.git
  #   source-tag: 0.48.2
  #   build-packages:
  #     - ninja-build

  # libcanberra: 
  #   after: [glib, gtk]
  #   source: git://git.0pointer.net/libcanberra.git
  #   configflags: [ --prefix=/usr ]
  #   plugin: autotools
  #   build-environment: *buildenv
  #   build-packages:
  #     - libasound2-dev
  #     - libvorbis-dev
  #     - libx11-dev
  #     - libtdb-dev
  #     - libpulse-dev
  #     - libgstreamer1.0-dev

  gsettings-desktop-schemas:
    after: [ libdazzle ]
    source: https://gitlab.gnome.org/GNOME/gsettings-desktop-schemas.git
    plugin: meson
    meson-parameters: [ --prefix=/usr ]
    build-environment: *buildenv

  # gnome-desktop:
  #   after: [glib, gobject-introspection, gtk, gdk-pixbuf, gsettings-desktop-schemas]
  #   source: https://gitlab.gnome.org/GNOME/gnome-desktop.git
  #   source-branch: gnome-3-32
  #   plugin: autotools
  #   configflags: [ --prefix=/usr, --disable-Werror ]
  #   build-environment: *buildenv
  #   build-packages:
  #     - iso-codes
  #     - libgl1-mesa-dev
  #     - libseccomp-dev
  #     - libudev-dev
  #     - libx11-dev
  #     - libxml2-dev
  #     - xkb-data
  #     - yelp-tools

  # clutter:
  #   after: [glib, gobject-introspection, json-glib, atk, cairo, pango, cogl, gtk]
  #   source: https://gitlab.gnome.org/GNOME/clutter.git
  #   plugin: meson
  #   meson-parameters: [ --prefix=/usr ]
  #   build-environment: *buildenv
  #   build-packages:
  #     - libgl1-mesa-dev
  #     - libdrm-dev
  #     - libxext-dev
  #     - libxdamage-dev
  #     - libxcomposite-dev
  #     - libxi-dev
  #     - xauth
  #     - xsltproc
  #     - xvfb
  #     - libinput-dev
  #     - libudev-dev
  #     - libgudev-1.0-dev
  #     - libxkbcommon-dev

  # clutter-gtk:
  #   after: [clutter, glib, gobject-introspection, gtk, gdk-pixbuf]
  #   source: https://gitlab.gnome.org/GNOME/clutter-gtk.git
  #   plugin: meson
  #   meson-parameters: [ --prefix=/usr ]
  #   build-environment: *buildenv

  # cogl:
  #   after: [glib, gobject-introspection, cairo, pango]
  #   source: https://gitlab.gnome.org/GNOME/cogl.git
  #   source-branch: cogl-1.22
  #   plugin: autotools
  #   configflags: [ --prefix=/usr, --enable-wayland-egl-platform=yes ]
  #   build-environment: *buildenv
  #   build-packages:
  #     - libgbm-dev
  #     - libgl1-mesa-dev
  #     - libgles2-mesa-dev
  #     - libwayland-dev
  #     - libxfixes-dev
  #     - libxdamage-dev
  #     - libxcomposite-dev
  #     - libxrandr-dev
  #     - xauth
  #     - xvfb
  #     - libgstreamer-plugins-base1.0-dev

  debs:
    after: [ gsettings-desktop-schemas ]
    plugin: nil
    stage-packages:
      - pkg-config
      - libpcre3-dev
      - zlib1g-dev
      - libmount-dev
      - libxml2-dev
      - libsqlite3-dev
      - libbrotli-dev
      - libthai-dev
      - libfontconfig1-dev
      - libxrender-dev
      - libxft-dev
      - libxcb-shm0-dev
      - libxcb-render0-dev
      - libxext-dev
      - libxi-dev
      - libxrandr-dev
      - libxcursor-dev
      - libxcomposite-dev
      - libxdamage-dev
      - libxinerama-dev
      - libwayland-dev
      - wayland-protocols
      - libxkbcommon-dev
      - libgl1-mesa-dev
      - libegl1-mesa-dev
      - libdbus-1-dev
      - libxtst-dev
      - gettext
      - shared-mime-info
      - libwebkit2gtk-4.0-dev
      - libgcr-3-dev
      - libnotify-dev
      - libsecret-1-dev
      - itstool
    override-build: |
      set -eux
      snapcraftctl build
      cd $SNAPCRAFT_STAGE/usr
      find . -type f,l -exec rm -f $SNAPCRAFT_PART_INSTALL/usr/{} \;

  last:
    after: [ debs ]
    plugin: nil
    build-environment: *buildenv
    override-stage: |
      set -eux
      snapcraftctl stage
      SCANNER=$SNAPCRAFT_STAGE/usr/bin/g-ir-scanner
      mv $SCANNER.orig $SCANNER
    override-prime: |
      set -eux
      snapcraftctl prime
      for PC in $(find . -path "*/pkgconfig/*.pc")
      do
        sed -i 's#prefix=$SNAPCRAFT_STAGE#prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current#' $PC
        sed -i 's#prefix=/usr#prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr#' $PC
        sed -i 's#original_prefix=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr#original_prefix=/usr#' $PC
        sed -i 's#exec_prefix=/usr#exec_prefix=${prefix}#' $PC
        sed -i 's#libdir=/usr/lib#libdir=${prefix}/lib#' $PC
        sed -i 's#includedir=/usr/include#includedir=${prefix}/include#' $PC
        sed -i 's#/usr/#/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/#' $PC
      done
      sed -i 's#/usr/bin/python#python3#' usr/bin/glib-mkenums
